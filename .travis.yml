sudo: required
language: cpp
dist: trusty
notifications:
  email: false
compiler:
  - g++

matrix:

  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - lcov
            - g++-8
            - gcc-8
      env:
         - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - lcov
            - g++-5
            - gcc-5
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - lcov
            - g++-6
            - gcc-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - lcov
            - g++-7
            - gcc-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"


before_install:
  - eval "${MATRIX_EVAL}"
  - sudo add-apt-repository ppa:chris-lea/libsodium -y
  - sudo apt-get update
  - sudo apt-get install libhttp-parser-dev
  - sudo apt-get install libsodium-dev libuv-dev
  - git submodule update --init --recursive
  - mkdir $HOME/usr
  - export PATH="$HOME/usr/bin:$PATH"
  - wget https://cmake.org/files/v3.12/cmake-3.12.0-Linux-x86_64.sh
  - chmod +x cmake-3.12.0-Linux-x86_64.sh
  - ./cmake-3.12.0-Linux-x86_64.sh --prefix=$HOME/usr --exclude-subdir --skip-license

before_script:
  - PARENTDIR=$(pwd)
  - mkdir $PARENTDIR/build && cd $PARENTDIR/build

script:
  - cd ..
  - cmake .
  - make tests.out
  - ./tests.out
  
after_success:
    # Creating report
  - cd ${TRAVIS_BUILD_DIR}
  - lcov --directory . --capture --output-file coverage.info # capture coverage info
  - lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
  - lcov --list coverage.info #debug info
  # Uploading report to CodeCov
  - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
